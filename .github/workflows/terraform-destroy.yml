name: Terraform Destroy (Manual Approval Required)

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: "‚ö†Ô∏è Are you sure you want to destroy all infrastructure?"
        required: true
        default: "No"
        type: choice
        options:
          - "No"
          - "Yes"

permissions:
  contents: read
  id-token: write
  deployments: write

env:
  TF_VERSION: 1.6.6
  TF_WORKING_DIR: prod-infra

jobs:
  terraform-destroy:
    name: Terraform Destroy (Manual Approval)
    runs-on: ubuntu-latest
    if: github.event.inputs.confirm_destroy == 'Yes'
    environment:
      name: production
      url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}

    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform init
        run: terraform init

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan (destroy preview)
        id: destroy-plan
        run: terraform plan -destroy -out=tfplan-destroy.out

      - name: Save destroy plan output
        run: terraform show -no-color tfplan-destroy.out > destroy-plan-output.txt

      - name: Upload destroy plan artifacts
        uses: actions/upload-artifact@v4
        with:
          name: terraform-destroy-plan
          path: |
            ${{ env.TF_WORKING_DIR }}/tfplan-destroy.out
            ${{ env.TF_WORKING_DIR }}/destroy-plan-output.txt

      # --- Manual approval required here (GitHub Environment) ---
      - name: Terraform destroy
        run: terraform apply -auto-approve tfplan-destroy.out

      - name: Destroy success message
        if: success()
        run: |
          echo "‚úÖ Terraform destroy completed successfully!"
          echo "üí• All infrastructure has been destroyed from AWS region: ${{ env.AWS_REGION }}"

      # Optional: Slack notification
      # - name: Notify Slack
      #   if: success()
      #   uses: slackapi/slack-github-action@v1.24.0
      #   with:
      #     payload: |
      #       {
      #         "text": "‚ö†Ô∏è Terraform destroy executed successfully for *production* in ${{ env.AWS_REGION }}."
      #       }
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
