name: Terraform CI/CD (Plan + Apply After Merge with Manual Approval)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  id-token: write
  deployments: write

env:
  TF_VERSION: 1.6.6
  TF_WORKING_DIR: prod-infra

jobs:
  terraform-plan:
    name: Terraform Plan (PR)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan.out

      - name: Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: plan
          path: ${{ env.TF_WORKING_DIR }}/tfplan.out

  terraform-apply:
    name: Terraform Plan + Apply (After Merge - Manual Approval)
    runs-on: ubuntu-latest
    needs: [terraform-plan]
    if: github.ref == 'refs/heads/main' # ✅ Simplified check
    environment:
      name: production
    defaults:
      run:
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init

      - name: Register Deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          environment: production
          ref: ${{ github.ref }}

      - name: Terraform Plan (Before Apply)
        run: terraform plan -out=tfplan-apply.out

      - name: Upload Apply Plan
        uses: actions/upload-artifact@v4
        with:
          name: tfplan-apply
          path: ${{ env.TF_WORKING_DIR }}/tfplan-apply.out

      - name: Wait for Environment Approval
        run: echo "⏸️ Waiting for approval in GitHub environment..."

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan-apply.out

      - name: Deployment Success Notification
        if: success()
        run: echo "✅ Terraform Apply Successful!"
